name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  # Security audit (runs once on Linux)
  security-audit:
    permissions:
      contents: read
      actions: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache cargo-audit
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/cargo-audit
          key: ${{ runner.os }}-cargo-audit

      - name: Install cargo-audit
        run: cargo install cargo-audit --locked || true

      - name: Check for security vulnerabilities
        run: cargo audit

  # Multi-platform tests
  backend-tests:
    permissions:
      contents: read
      actions: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          # Linux x86_64
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
          # macOS Intel
          - { os: macos-13, target: x86_64-apple-darwin }
          # macOS ARM (M1/M2)
          - { os: macos-14, target: aarch64-apple-darwin }
          # Windows x86_64
          - { os: windows-latest, target: x86_64-pc-windows-msvc }

    runs-on: ${{ matrix.platform.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          override: true
          components: clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            backend/target
          key: ${{ runner.os }}-${{ matrix.platform.target }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform.target }}-cargo-test-

      - name: Create frontend dist directory for tests
        run: mkdir -p frontend/dist

      - name: Run Clippy
        run: |
          cd backend
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: |
          cd backend
          cargo test --verbose --all-features

      - name: Build release
        run: |
          cd backend
          cargo build --release --target ${{ matrix.platform.target }}

  # Frontend tests
  frontend-tests:
    permissions:
      contents: read
      actions: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run tests
        run: |
          cd frontend
          npm test -- --run
