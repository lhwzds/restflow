name: Tauri Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
jobs:
  tauri-build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            web/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Tauri CLI
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/cargo-tauri*
          key: ${{ runner.os }}-tauri-cli-v2-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-tauri-cli-v2-

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Install Windows dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          choco install visualstudio2022-workload-vctools -y
        shell: powershell

      - name: Install frontend dependencies
        run: npm --prefix web ci

      - name: Install Tauri CLI (Unix)
        if: matrix.platform != 'windows-latest'
        run: |
          if ! command -v cargo-tauri &> /dev/null; then
            cargo install tauri-cli --version "^2"
          else
            echo "Tauri CLI already installed"
          fi

      - name: Install Tauri CLI (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          if (!(Get-Command cargo-tauri -ErrorAction SilentlyContinue)) {
            cargo install tauri-cli --version "^2" --locked
          } else {
            echo "Tauri CLI already installed"
          }
        shell: powershell

      - name: Build Tauri app (macOS, app only)
        if: matrix.platform == 'macos-latest'
        working-directory: crates/restflow-desktop
        run: cargo tauri build --bundles app --verbose

      - name: Build Tauri app (other platforms)
        if: matrix.platform != 'macos-latest'
        working-directory: crates/restflow-desktop
        run: cargo tauri build --verbose
