name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build and start RestFlow
        run: docker compose up -d --build

      - name: Wait for service
        run: |
          echo "Waiting for RestFlow..."
          for i in {1..5}; do
            if curl -f http://localhost:3000 2>/dev/null; then
              echo "✅ RestFlow is running!"
              exit 0
            fi
            echo "Attempt $i/5..."
            sleep 2
          done
          echo "❌ RestFlow failed to start"
          docker compose logs
          exit 1

      - name: Show logs on failure
        if: failure()
        run: docker compose logs

  tauri-build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            src-tauri/target
            backend/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Tauri CLI
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/cargo-tauri
          key: ${{ runner.os }}-tauri-cli-v2

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Install Windows dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          choco install visualstudio2022-workload-vctools -y
        shell: powershell

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Install Tauri CLI
        run: |
          if ! command -v cargo-tauri &> /dev/null; then
            cargo install tauri-cli --version "^2"
          else
            echo "Tauri CLI already installed"
          fi

      - name: Build Tauri app (Release)
        run: cargo tauri build
