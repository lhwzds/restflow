// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { AgentInput } from "./AgentInput";
import type { HttpInput } from "./HttpInput";
import type { ManualTriggerInput } from "./ManualTriggerInput";
import type { PrintInput } from "./PrintInput";
import type { PythonInput } from "./PythonInput";
import type { ScheduleInput } from "./ScheduleInput";
import type { WebhookTriggerInput } from "./WebhookTriggerInput";

/**
 * Unified node input enum. Each variant corresponds to a node type's input structure.
 *
 * Note: Uses `#[serde(tag = "type", content = "data")]` for O(1) deserialization dispatch
 * (15-20% faster than manual parsing) at ~20 bytes overhead per node. The tagged format
 * also enables type-safe parsing when JSON is detached from parent context.
 */
export type NodeInput = { "type": "HttpRequest", "data": HttpInput } | { "type": "Agent", "data": AgentInput } | { "type": "Python", "data": PythonInput } | { "type": "Print", "data": PrintInput } | { "type": "ManualTrigger", "data": ManualTriggerInput } | { "type": "WebhookTrigger", "data": WebhookTriggerInput } | { "type": "ScheduleTrigger", "data": ScheduleInput };
